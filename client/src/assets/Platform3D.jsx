/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 platform3D.glb 
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import { useMemo } from "react";
import { useThree } from "@react-three/fiber";

export function Model(props) {
  const { scene } = useGLTF("platform3D.glb");
  const clone = React.useMemo(
    () => SkeletonUtils.clone(scene),
    [scene]
  );

  const { size } = useThree();

  const scale = useMemo(() => {
    if (size.width < 768) return 1; // Mobile
    if (size.width < 1200) return 1.5; // Tablet
    return 2.5; // Desktop
  }, [size.width]);

  console.log("âœ… Model Scale Applied:", scale);

  const { nodes, materials } = useGraph(clone);
  return (
    <group
      {...props}
      dispose={null}
      scale={[scale, scale, scale]}
      position={[0, -1, 0]}
    >
      <directionalLight
        intensity={2}
        decay={2}
        position={[14.896, 8.645, 14.895]}
        target={nodes.DirectionalLight.target}
      >
        <primitive
          object={nodes.DirectionalLight.target}
          position={[0, 0, -1]}
        />
      </directionalLight>
      <mesh
        geometry={nodes.Sphere.geometry}
        material={nodes.Sphere.material}
        position={[7, 2.2, -0.601]}
      />
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
        position={[7, 0, -0.601]}
        scale={[0.5, 4, 0.5]}
      />
      <mesh
        geometry={nodes.Sphere_1.geometry}
        material={nodes.Sphere_1.material}
        position={[2, 2.2, 1.036]}
      />
      <mesh
        geometry={nodes.Cylinder_1.geometry}
        material={nodes.Cylinder_1.material}
        position={[2, 0, 1.093]}
        scale={[0.5, 4, 0.5]}
      />
      <mesh
        geometry={nodes.Cylinder_2.geometry}
        material={nodes.Cylinder_2.material}
        position={[4.885, -2.483, 1.833]}
        scale={[6, 2, 6]}
      />
      <mesh
        geometry={nodes.Cylinder_3.geometry}
        material={nodes.Cylinder_3.material}
        position={[-7.069, -2.483, 1.805]}
        scale={[6, 2, 6]}
      />
      <mesh
        geometry={nodes.Cylinder_4.geometry}
        material={nodes.Cylinder_4.material}
        position={[-7.418, -0.932, 1.922]}
        rotation={[0, Math.PI / 9, 0]}
        scale={[4, 1, 4]}
      />
      <mesh
        geometry={nodes.Octahedron.geometry}
        material={nodes.Octahedron.material}
        position={[-8.098, 1.91, -1.191]}
        scale={[1, 1.5, 1]}
      />
      <mesh
        geometry={nodes.Cylinder_5.geometry}
        material={nodes.Cylinder_5.material}
        position={[-4.372, 1.91, 2.862]}
        scale={[0.25, 2, 0.25]}
      />
      <mesh
        geometry={nodes.Cylinder_6.geometry}
        material={nodes.Cylinder_6.material}
        position={[-4.373, 1.91, 2.858]}
        rotation={[0, 0, Math.PI / 2]}
        scale={[0.25, 1.8, 0.25]}
      />
      <mesh
        geometry={nodes.Box.geometry}
        material={nodes.Box.material}
        position={[-9.565, 1.91, 4.22]}
        rotation={[0, 0, Math.PI / 4]}
      />
      <mesh
        geometry={nodes.Cylinder_7.geometry}
        material={nodes.Cylinder_7.material}
        position={[6, 0, 4]}
        scale={[0.5, 4, 0.5]}
      />
      <mesh
        geometry={nodes.Sphere_2.geometry}
        material={nodes.Sphere_2.material}
        position={[6, 2.2, 4]}
      />
      <mesh
        geometry={nodes.Box_1.geometry}
        material={nodes.Box_1.material}
        position={[-0.949, -2.48, -1.364]}
        scale={[8, 2, 4.5]}
      />
    </group>
  );
}

useGLTF.preload("/platform3D.glb");
